"use strict";var token=JSON.parse(localStorage.getItem("token")),headers={Authorization:"Bearer ".concat(token)};function loadPostToEdit(){var e,s,n,a,o,i;return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,e=new URLSearchParams(window.location.search),s=Object.fromEntries(e.entries()),n=s.postID,t.next=6,regeneratorRuntime.awrap(axios.get("posts/getPrivatePostToEdit?privatePostID=".concat(n),{headers:headers}));case 6:a=t.sent,o=a.data,i='\n    <div class="post__stats">\n    <div class="post__stats__date"><span class="bold">Date Posted:</span> '.concat(o.date,'</div>\n    <div class="post__stats__views"><span class="bold">Views:</span> ').concat(o.views,'</div>\n    <div class="post__stats__likes"><span class="bold">Likes:</span> ').concat(o.likes,' <span class="bold">Dislikes:</span> ').concat(o.dislikes,'</div>\n    <div class="post__stats__comments"><span class="bold">Number of Comments:</span> ').concat(o.comments.length,'</div>\n</div>\n<div class="post__edit">\n    <div class="edit">Click to Edit</div>\n    <label class="edit--labels">Title:</label>\n    <div class="post__edit__title" contenteditable="true">').concat(o.title,'</div>\n    <label class="edit--labels">Tags:</label>\n    <div class="post__edit__tags" contenteditable="true">').concat(o.tags,'</div>\n    <label class="edit--labels">Post:</label>\n    <div class="post__edit__post" contenteditable="true">').concat(o.post,'</div>\n    <button class="post__edit__submit" onclick="handleEditPost(\'').concat(o.postID,"')\">Edit!</button>\n</div>\n    "),document.querySelector(".post").innerHTML=i,t.next=16;break;case 13:t.prev=13,t.t0=t.catch(0),console.error(t.t0);case 16:case"end":return t.stop()}},null,null,[[0,13]])}function handleEditPost(s){var n,a,o;return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:try{n=document.querySelector(".post__edit__title").innerText,a=document.querySelector(".post__edit__tags").innerText,o=document.querySelector(".post__edit__post").innerText,swal({title:"Are you sure you want to edit?",text:"Once edited, you will not be able to recover the original post!",icon:"warning",buttons:!0,dangerMode:!0}).then(function(e){return regeneratorRuntime.async(function(t){for(;;)switch(t.prev=t.next){case 0:if(e)return t.next=3,regeneratorRuntime.awrap(axios.put("posts/editPost",{postID:s,title:n,tags:a,post:o},{headers:headers}));t.next=8;break;case 3:t.sent,loadPostToEdit(),swal("Poof! Your post has been edited!",{icon:"success"}),t.next=9;break;case 8:swal("Your post has not changed!");case 9:case"end":return t.stop()}})})}catch(t){console.error(t)}case 1:case"end":return t.stop()}})}window.addEventListener("load",loadPostToEdit);